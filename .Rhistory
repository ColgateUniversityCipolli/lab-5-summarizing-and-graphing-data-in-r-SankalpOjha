FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
select(-allen.data.feature) |>
return(summarize.data)
}
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
}
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
view(list.descriptions)
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
view(list.descriptions)
#Counting code
as <- 0
ms <- 0
ts <- 0
for(i in 1:length(list.descriptions)){
if(list.descriptions[i] == "Within Range" & (i%%3 == 2)){
as = as + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 1)){
ms = ms + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 0)){
ts = ts + 1
}
}
#min(...) provides the minimum for a vector
#quantile(...) provides the specified percentile for a vector
#median(...) provides the median for a vector
#max(...) provides the max for a vector
#IQR(...) provides the interquartile rang for a vector
rename("All Get Out" = "X25.",
"Manchester Orchestra" = "X25..1",
"The Front Bottoms" = "X25..2")
all.data <- list.descriptions|>
rename("All Get Out" = "X25.",
"Manchester Orchestra" = "X25..1",
"The Front Bottoms" = "X25..2")
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
library("xtable")
all.data <- list.descriptions|>
rename("All Get Out" = "X25.",
"Manchester Orchestra" = "X25..1",
"The Front Bottoms" = "X25..2")
all.data <- list.descriptions|>
rename(All Get Out = X25.,
all.data <- list.descriptions|>
rename(All.Get.Out = X25.,
Manchester.Orchestra = X25..1,
The.Front.Bottoms = X25..2)
all.data <- list.descriptions|>
rename(All.Get.Out = X25.,
Manchester.Orchestra = X25..1,
The.Front.Bottoms = X25..2)
all.data <- list.descriptions|>
mutate(sum = rowsum("Within Range"))|>
rename(All.Get.Out = X25.,
Manchester.Orchestra = X25..1,
The.Front.Bottoms = X25..2)
library("tidyverse")
all.data <- list.descriptions|>
mutate(sum = rowsum("Within Range"))|>
rename(All.Get.Out = X25.,
Manchester.Orchestra = X25..1,
The.Front.Bottoms = X25..2)
view(all.data)
?str_split
view(other.data)
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
view(list.descriptions)
data
dim(list.descriptions)
#loading the libraries
library("tidyverse")
#loading the data sets
allen.data = read_csv("data/essentia.data.allentown.csv")
all.data = read_csv("data/essentia.data.csv")
allen.bounds <- function(feature = "overall_loudness", #Function that finds whether a song feature is similar to the features of Allentown
data = all.data) {
summarize.data <- data |>
mutate(feature = as.numeric(get({feature}))) |> #Gets the feature from the data set
group_by(artist) |> #Apply for each artists
summarize( #Finds the minimum, maximum, Lower Fence, and Upper fence for a box plot distribution of a feature
minimum = min({feature}, na.rm = TRUE),
maximum = max({feature}, na.rm = TRUE),
LF = quantile({feature}, 0.25, na.rm = TRUE) - 1.5 * IQR({feature}, na.rm = TRUE),
UF = quantile({feature}, 0.75, na.rm = TRUE) + 1.5 * IQR({feature}, na.rm = TRUE),
) |>
mutate( #Determines whether the feature for Allentown is within range, outlying, or out of range for the box plot of the given feature
allen.feature = get(feature, allen.data),
out.of.range = ifelse(minimum > allen.feature | maximum < allen.feature,
TRUE,
FALSE),
unusual = ifelse(LF > allen.feature | UF < allen.feature,
TRUE,
FALSE),
description = ifelse(unusual == TRUE,
ifelse(out.of.range == TRUE,
"Out of Range",
"Outlying"),
"Within Range")
) |>
select(-allen.feature) #Remove comparison variable from final data set
return(summarize.data)
}
#These three lines compile a list a numeric vectors in the initial data set, used for analysis
columns.class = sapply(all.data, class)
columns.not = which(columns.class != "numeric")
columns = str_split(colnames(all.data), " ", simplify = TRUE)[-columns.not,]
#Object setup for getting the box plot descriptions(i.e. Within Range, Outlying, Out of Range)
descriptions = c()
all.descriptions = data.frame(artists = c("All Get Out",
"Manchster Orchestra",
"The Front Bottoms"))
all.descriptions
for(column in columns) { #For each song feature
for(index in 1:3) { # For each Artist
column.analyze = allen.bounds(column)[[8]][index] #Gets box plot descriptions for a spesfic feature for all artists
descriptions = c(descriptions, column.analyze)
}
all.descriptions = cbind(all.descriptions, descriptions) #Adds description for the specific feature (column) to our final data set
descriptions = c()
}
all.descriptions
view(all.descriptions)
?bind_cols
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
library("xtable")
names <- tibble(artists = c("All Get Out",
"Manchster Orchestra",
"The Front Bottoms"))
all.data <- bind_cols(names, list.descriptions)
view(all.data)
dim(all.data)
length(all.data)
height(all.data)
length(names)
all.data[1][1]
all.data[1]
all.data[2]
all.data[2][3]
pivot_longer(all.data)
?pivot_longer
pivot_longer(all.data, artist)
pivot_longer(all.data, artists)
view(all.data)
all.data <- pivot_longer(all.data, artists)
view(all.data)
names <- tibble(artists = c("All Get Out",
"Manchster Orchestra",
"The Front Bottoms"))
all.data <- bind_cols(names, list.descriptions)
view(all.data)
all.data <- pivot_wider(all.data, artists)
?pivot_wider
all.data <- pivot_wider(all.data)
all.data <- bind_cols(names, list.descriptions)
view(all.data)
library("tidyverse")
library("tidyverse")
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
names <- tibble(artists = c("All Get Out",
"Manchster Orchestra",
"The Front Bottoms"))
all.data <- bind_cols(names, list.descriptions)
view(all.data)
summary.data <- all.data |>
rowwise()|>
mutate(as.count = rowsum(all.data[1] == "Within Range"))
view(summary.data)
summary.data <- all.data |>
rowwise()|>
mutate(as.count = rowsum(all.data[1] == "Within Range"))
summary.data <- all.data |>
rowwise()|>
mutate(as.count = rowsum(all.data[2] == "Within Range"))
summary.data <- all.data |>
rowwise()|>
mutate(as.count = rowsum(all.data == "Within Range"))
