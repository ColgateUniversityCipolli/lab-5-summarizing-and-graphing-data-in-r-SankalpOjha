col.numeric
view(col.numeric)
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = FALSE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = FALSE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in cols.numeric.names){
data <- checker(cols.numeric.names[col])
list.descriptions <- cbind(list.descriptions, data[[9]])
}
cols.numeric.names[col]
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = FALSE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = FALSE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
#for(col in cols.numeric.names){
col = 1
col
cols.numeric.names[col]
data <- checker(cols.numeric.names[col])
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
list.descriptions
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = FALSE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = FALSE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in cols.numeric.names){
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
}
list.descriptions
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = FALSE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = FALSE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
#for(col in cols.numeric.names){
col = 1
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
view(list.descriptions)
#for(col in cols.numeric.names){
col = 2
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
view(list.descriptions)
length(cols.numeric.names)
#for(col in cols.numeric.names){
col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
#}
view(list.descriptions)
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = FALSE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = FALSE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
}
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
}
view(list.descriptions)
list.descriptions
view(list.descriptions)
class(list.descriptions)
list.descriptions[0][0]
list.descriptions[1][1]
list.descriptions[1][3]
list.descriptions[1][2]
list.descriptions[1][1]
list.descriptions[2][1]
list.descriptions[3][1]
list.descriptions[3][2]
list.descriptions[3]
list.descriptions[4]
list.descriptions[20]
list.descriptions[21]
list.descriptions[17]
list.descriptions[18]
length(list.descriptions)
591/3
as <- 0
ms <- 0
ts <- 0
for(i in 1:length(list.descriptions)){
if(list.descriptions[i] == "Within Range" & (i%%3 == 2)){
as = as + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 1)){
ms = ms + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 1)){
ts = ts + 1
}
}
as
ms
ts
as <- 0
ms <- 0
ts <- 0
for(i in 1:length(list.descriptions)){
if(list.descriptions[i] == "Within Range" & (i%%3 == 2)){
as = as + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 1)){
ms = ms + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 0)){
ts = ts + 1
}
}
as
ms
ts
as <- 0
ms <- 0
ts <- 0
for(i in 1:length(list.descriptions)){
if(list.descriptions[i] == "Within Range" & (i%%3 == 2)){
as = as + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 1)){
ms = ms + 1
}else if(list.descriptions[i] == "Within Range" & (i%%3 == 0)){
ts = ts + 1
}else if(list.descriptions[i] == "Outlying" & (i%%3 == 2)){
as = as + 0.5
}else if(list.descriptions[i] == "Outlying" & (i%%3 == 1)){
ms = ms + 0.5
}else if(list.descriptions[i] == "Outlying" & (i%%3 == 0)){
ts = ts + 0.5
}
}
as
ms
ts
list.descriptions
other.data
view(other.date)
view(other.data)
data
view(data)
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)
select(-allen.data.feature) |>
return(summarize.data)
}
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[9]])
}
library("tidyverse")
library("jsonlite")
library("stringr")
#get Allentown data
allen.data <- read_csv("data/essentia.data.allentown.csv")
#get other data
other.data <- read_csv("data/essentia.data.csv")
#function to extract data about how each band compares to Allentown
checker <- function(feature = feature,
allen.data = allen.data,
other.data = other.data){
summarize.data <- other.data |>
mutate(feature = as.numeric(get(feature)))|>
group_by(artist) |>
summarize(
minimum = min(feature, na.rm = TRUE),
maximum = max(feature, na.rm = TRUE),
low.bound = quantile(feature, 0.25, na.rm = TRUE) - 1.5 * IQR(feature, na.rm = TRUE),
upper.bound = quantile(feature, 0.75, na.rm = TRUE) + 1.5 * IQR(feature, na.rm = TRUE)
)|>
mutate(
allen.data.feature = allen.data[[feature]],
out.of.range = ifelse((minimum > allen.data.feature | maximum < allen.data.feature),
TRUE,
FALSE),
unusual = ifelse((low.bound > allen.data.feature | upper.bound < allen.data.feature),
TRUE,
FALSE)
)|>
mutate(
description = ifelse((unusual == TRUE),
ifelse((out.of.range == TRUE),
"Out Of Range",
"Outlying"),
"Within Range")
)|>
select(-allen.data.feature)
return(summarize.data)
}
#remove all columns which are not numeric
col.classes.type <- sapply(other.data, class)
cols.numeric.names <- names(other.data[which(col.classes.type == "numeric")])
list.descriptions <- c()
for(col in 1:length(cols.numeric.names)){
#col = 196
data <- checker(cols.numeric.names[col], allen.data, other.data)
list.descriptions <- cbind(list.descriptions, data[[8]])
}
view(list.descriptions)
